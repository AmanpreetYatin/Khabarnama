package com.bxs.khabarnama.ui.activities;import android.os.AsyncTask;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.Menu;import android.view.MenuItem;import android.widget.Toast;import com.bxs.khabarnama.R;import com.bxs.khabarnama.ui.Utils.Constants;import com.bxs.khabarnama.ui.Utils.Utilities;import com.bxs.khabarnama.ui.adapters.AllStationsAdapter;import com.bxs.khabarnama.ui.adapters.AudioItemAdapter;import com.bxs.khabarnama.ui.fragments.HomeFragment;import com.bxs.khabarnama.ui.models.AudioModel;import com.bxs.khabarnama.ui.player.PlayerConstants;import java.io.BufferedReader;import java.io.InputStreamReader;import java.net.URL;import java.util.ArrayList;import butterknife.BindView;import butterknife.ButterKnife;public class AllStationActivity extends AppCompatActivity {    @BindView(R.id.recycleview)    RecyclerView mRecycleview;    private ArrayList<AudioModel> mAudioModelArrayList = new ArrayList<>();    private AllStationsAdapter mAllStationsAdapter;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_all_stations);        ButterKnife.bind(this);        initializeRecycleView();        init();    }    private void initializeRecycleView() {        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getApplication());        mRecycleview.setLayoutManager(linearLayoutManager);        mAllStationsAdapter = new AllStationsAdapter(getApplicationContext(),mAudioModelArrayList);        mRecycleview.setAdapter(mAllStationsAdapter);    }         private class getList extends AsyncTask<String, String, String> {             int dpos = 0;             int fpos = 0;             String stName, fName, sturl, tmp;             int stLength = 0;             String d, m;             String mDur, fsize;             @Override             protected String doInBackground(String... params) {                 try {                     publishProgress("start");                     String svrName = "http://dpr.radiokhabarnama.com";                     URL url = new URL(Constants.URL_NEW_PROGRAMS); // "http://dpr.radiokhabarnama.com" + "/    home/getlist?odays=10&passkey=7102"                     BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));                     String str = reader.readLine();                     if (str.charAt(0) != '$') {                         publishProgress("err");                         return "bye";                     } //return if File not starting with $ , i.e it is not our required file                     str = reader.readLine();                     PlayerConstants.NEW_SONGS_LIST.clear();                     stLength = str.length();                     while (stLength > 40) {                         dpos = str.indexOf('$', 1);                         mDur = str.substring(0, dpos);                         dpos++;                         fpos = str.indexOf('$', dpos);                         fsize = str.substring(dpos, fpos);                         dpos = str.indexOf('\\', 6);                         dpos++;                         fpos = str.indexOf('\\', dpos);                         stName = str.substring(dpos, fpos);                         fName = str.substring(fpos + 7, stLength - 4).trim();                         m = Utilities.getMonth(str.substring(fpos + 3, fpos + 5));                         d = str.substring(fpos + 5, fpos + 7);                         tmp = svrName + "/" + str.substring(dpos - 7);                         sturl = tmp.trim();                         tmp = sturl.replace('\\', '/');                         sturl = tmp.replaceAll(" ", "%20");                         PlayerConstants.NEW_SONGS_LIST.add(new AudioModel(fName, stName, sturl, m, d, mDur, fsize)); //add to arraylist title,station name,file url,month,day,file duration in minutes,file size in kb                         str = reader.readLine();                         stLength = str.length();                     }                     reader.close();                 } catch (Exception e) {                     publishProgress("err");                 }                 publishProgress("ok");                 return "bye";             }             @Override             protected void onProgressUpdate(String... params) {                 if (params[0].equals("start")) {                     Toast.makeText(getApplicationContext(), "Fetching...", Toast.LENGTH_SHORT).show();                     return;                 }                 if (params[0].equals("err")) {                     Toast.makeText(getApplicationContext(), " Unable to connect Server, please try after few minutes", Toast.LENGTH_SHORT).show();                 }//use here ArrayList to populate ListView in android activity             }             @Override             protected void onPostExecute(String s) {                 super.onPostExecute(s);                 mAudioModelArrayList.addAll(PlayerConstants.NEW_SONGS_LIST);                 mAllStationsAdapter.notifyDataSetChanged();                 /*mAudioItemAdapter.setOnItemClickListener(new AudioItemAdapter.OnItemClickListener() {                     @Override                     public void onItemClick(AudioModel item, int position) {                         changeBackground(position);                     }                 });*/             }         }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        if (item.getItemId()==android.R.id.home){            finish();        }        return super.onOptionsItemSelected(item);    }    private void init() {        getSupportActionBar().setTitle("All Stations");        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        //get latest program        new getList().execute();    }}